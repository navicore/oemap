/*
 * Copyright (c) 2013. Ed Sweeney.  All Rights Reserved.
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
    }
}
apply plugin: 'android'

dependencies {
    compile files('libs/android-support-v4.jar', '../libraries/GooglePlay/libs/google-play-services.jar')
}

def buildName = file("/Users/navicore/git/navicore/oemap/android/OeMap/getVersionName.sh").toString().execute().text.trim()

android {
    compileSdkVersion 18
    buildToolsVersion "25.0.2"

    lintOptions {
      abortOnError false
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 18
        
        testApplicationId "com.onextent.test.oemap"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }

    signingConfigs {
        debug {
            storeFile file("oemap-debug-key.keystore")
            storePassword "rusty is a cowboy"
            keyAlias "androidbeta"
            keyPassword "rusty is a cowboy"
        }

        release {
            storeFile file("oemap-release-key.keystore")
            storePassword "200000"
            keyAlias "oemap_rel"
            keyPassword "200000"
        }
    }

    buildTypes {
        debug.initWith(buildTypes.release)
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }
        release {
            debuggable false
            signingConfig signingConfigs.release
        }
        android.applicationVariants.all { variant ->

/*

            apk = variant.outputs[0].outputFile;
            if (variant.buildType.name == "release") {
                newName = apk.name.replace(".apk", "-v" + buildName + "-RELEASE.apk");
            } else {
                newName = apk.name.replace(".apk", "-v" + buildName + "-SNAPSHOT.apk");
            }
*/

            //newName = newName.replace("-" + variant.buildType.name, "");

            variant.outputs.each { output ->
              output.outputFile = new File(output.outputFile.parent, name);
              //variant.outputFile = new File(apk.parentFile, newName);
            }
            //if (variant.zipAlign) {
            //    variant.zipAlign.outputFile = new File(apk.parentFile, newName.replace("-unaligned", ""));
            //}
        }
    }
}

task initVerInfo << {
    //ejs fix this @@4#$%#$$ing absolute path
    def proc = "/Users/navicore/git/navicore/oemap/android/OeMap/init_verinfo.sh".execute()
    proc.in.eachLine {line -> println line} 
    proc.err.eachLine {line -> println 'ERROR: ' + line} 
    proc.waitFor() 
    tasks.build.execute();
}

//assembleDebug.dependsOn "initVerInfo"
//assembleRelease.dependsOn "initVerInfo"

